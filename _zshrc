# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="robbyrussell"


# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git)

source $ZSH/oh-my-zsh.sh

# Customize to your needs...
PICT_CHAR=($'\U1F49A ' $'\U1F3B5 ' $'\U1F300 ' $'\U1F47B ' $'\U1F431 ' $'\U1F436 ' $'\U1F604 ' $'\U2728 ' $'\U1F4A3 ' $'\U1F3B8 ')

PROMPT=$'$PICT_CHAR[$[$RANDOM % ${#PICT_CHAR[@]} + 1]] %{$fg_bold[cyan]%}%c %{$fg_bold[blue]%}$(git_prompt_info)%{$fg_bold[blue]%} % %{$reset_color%}'
#RPROMPT=$'%{$fg_bold[green]%}[%d]%{$reset_color%}'

# alias
alias cl="clear"
alias sc="screen"
alias up="cd ../"

# tmuxでWidonw名が戻る対応
DISABLE_AUTO_TITLE=true
# tmuxのvimでcolorscheme対応
alias tmux="TERM=screen-256color-bce tmux"
# tmux環境変数
PROMPT="$PROMPT"'$([ -n "$TMUX" ] && tmux setenv TMUXPWD_$(tmux display -p "#D" | tr -d %) "$PWD")'

# z.sh
. `brew --prefix`/etc/profile.d/z.sh

# bundle exec
[ -f ~/.bundler-exec.sh ] && source ~/.bundler-exec.sh

# tmux自動起動
if [ -z $TMUX ]; then
    if $(tmux has-session); then
        tmux attach
    else
        tmux
    fi
fi
# ssh 時に新規ウィンドウを作る
ssh_tmux() {
    ssh_cmd="ssh $@"

    # 引数からホスト名を探してそれをウィンドウ名にする
    for i in $(seq 1 $#);do
        arg=$argv[$i]
        if [[ $arg =~ "@" ]] ; then
            name=${arg##*@}
        fi
    done
    tmux new-window -n "$name" "$ssh_cmd"
}
if [[ $TERM =~ ^"screen" ]] ; then
    alias ssh=ssh_tmux
fi

# `cd`で`ls`
# http://qiita.com/yuyuchu3333/items/b10542db482c3ac8b059
chpwd() {
    ls_abbrev
}
ls_abbrev() {
   # -a : Do not ignore entries starting with ..
    # -C : Force multi-column output.
    # -F : Append indicator (one of */=>@|) to entries.
    local cmd_ls='ls'
    local -a opt_ls
    opt_ls=('-aCF' '--color=always')
    case "${OSTYPE}" in
        freebsd*|darwin*)
            if type gls > /dev/null 2>&1; then
                cmd_ls='gls'
            else
                # -G : Enable colorized output.
                #opt_ls=('-aCFG')
                opt_ls=('-lFG')
            fi
            ;;
    esac

    local ls_result
    ls_result=$(CLICOLOR_FORCE=1 COLUMNS=$COLUMNS command $cmd_ls ${opt_ls[@]} | sed $'/^\e\[[0-9;]*m$/d')

    local ls_lines=$(echo "$ls_result" | wc -l | tr -d ' ')

    if [ $ls_lines -gt 10 ]; then
        echo "$ls_result" | head -n 5
        echo '\e[1;35;5;196m...\e[m'
        echo "$ls_result" | tail -n 5
        echo "\e[0;38;5;200m \U1F680  $(command ls -1 -A | wc -l | tr -d ' ') files exist \U1F680 \e[m"
        echo ""
    else
        echo "$ls_result"
        echo ""
    fi
}

# ^で`cd ..`
cdup() {
    if [ -z "$BUFFER" ]; then
        echo
        cd ..
        if type precmd > /dev/null 2>&1; then
            precmd
        fi
        local precmd_func
        for precmd_func in $precmd_functions; do
            $precmd_func
        done
        zle reset-prompt
    else
        zle self-insert '^'
    fi
}
zle -N cdup
bindkey '\^' cdup
